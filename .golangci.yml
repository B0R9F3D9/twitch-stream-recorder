formatters:
  enable:
    - golines
    - gci
    - gofumpt
    - goimports
    - gofmt
  settings:
    golines:
      max-len: 80
      tab-len: 2
      shorten-comments: true
      reformat-tags: true
      chain-split-dots: true
    gci:
      sections:
        - standard
        - default
    gofumpt:
      extra-rules: true
    gofmt:
      rewrite-rules:
        - pattern: 'interface{}'
          replacement: 'any'
        - pattern: 'a[b:len(a)]'
          replacement: 'a[b:]'

issues:
  max-issues-per-linter: 0
  max-same-issues: 0

linters:
  enable:
    - lll
    - depguard
    - errorlint
    - exptostd
    - fatcontext
    - gocritic
    - godot
    - govet
    - loggercheck
    - misspell
    - nilnesserr
    - perfsprint
    - predeclared
    - revive
    - sloglint
    - testifylint
    - unconvert
    - unused
    - usestdlibvars
    - whitespace

  exclusions:
    paths:
      - ^.*\.(pb|y)\.go$
    rules:
      - linters:
          - errcheck
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
      - linters:
          - govet
        text: 'stdmethods: method Seek.* should have signature Seek'
      - linters:
          - gocritic
        text: 'appendAssign'
      - linters:
          - errcheck
        path: _test.go
      - linters:
          - errorlint
        path: 'tsdb/head_wal.go'
      - linters:
          - godot
        source: '^// ==='
  settings:
    lll:
      line-length: 80
      tab-width: 2
    depguard:
      rules:
        main:
          deny:
            - pkg: 'github.com/stretchr/testify/assert'
              desc: 'Use github.com/stretchr/testify/require instead of github.com/stretchr/testify/assert'
            - pkg: 'github.com/go-kit/kit/log'
              desc: 'Use github.com/go-kit/log instead of github.com/go-kit/kit/log'
            - pkg: 'io/ioutil'
              desc: "Use corresponding 'os' or 'io' functions instead."
            - pkg: 'regexp'
              desc: 'Use github.com/grafana/regexp instead of regexp'
            - pkg: 'github.com/pkg/errors'
              desc: "Use 'errors' or 'fmt' instead of github.com/pkg/errors"
            - pkg: 'gzip'
              desc: 'Use github.com/klauspost/compress instead of gzip'
            - pkg: 'zlib'
              desc: 'Use github.com/klauspost/compress instead of zlib'
            - pkg: 'golang.org/x/exp/slices'
              desc: "Use 'slices' instead."
    govet:
      disable:
        - shadow
        - fieldalignment
      enable-all: true
    perfsprint:
      int-conversion: true
      err-error: true
      errorf: true
      sprintf1: true
      strconcat: false
    revive:
      rules:
        - name: blank-imports
        - name: comment-spacings
        - name: context-as-argument
          arguments:
            - allowTypesBefore: '*testing.T,testing.TB'
        - name: context-keys-type
        - name: dot-imports
        - name: early-return
          arguments:
            - 'preserveScope'
        - name: empty-block
          disabled: true
        - name: error-naming
        - name: error-return
        - name: error-strings
        - name: errorf
        - name: exported
        - name: increment-decrement
        - name: indent-error-flow
          arguments:
            - 'preserveScope'
        - name: package-comments
          disabled: true
        - name: range
        - name: receiver-naming
        - name: redefines-builtin-id
        - name: superfluous-else
          arguments:
            - 'preserveScope'
        - name: time-naming
        - name: unexported-return
        - name: unreachable-code
        - name: unused-parameter
        - name: unused-receiver
        - name: var-declaration
        - name: var-naming
    testifylint:
      disable:
        - float-compare
        - go-require
      enable-all: true

output:
  show-stats: false

run:
  timeout: 10s

version: '2'
